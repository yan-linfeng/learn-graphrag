encoding_model: cl100k_base
#skip_workflows: [ create_base_text_units, create_base_extracted_entities, create_final_covariates, create_summarized_entities, join_text_units_to_covariate_ids, create_base_entity_graph, create_final_entities, create_final_nodes, create_final_communities, join_text_units_to_entity_ids, create_final_relationships, join_text_units_to_relationship_ids, create_final_community_reports, create_final_text_units, create_base_documents, create_final_documents]
skip_workflows: [ ]
#skip_workflows: [ create_base_extracted_entities, create_final_covariates, create_summarized_entities, join_text_units_to_covariate_ids, create_base_entity_graph, create_final_entities, create_final_nodes, create_final_communities, join_text_units_to_entity_ids, create_final_relationships, join_text_units_to_relationship_ids, create_final_community_reports, create_final_text_units, create_base_documents, create_final_documents ]

llm:
  api_key: ${GRAPHRAG_API_KEY}
  # type: openai_chat # or azure_openai_chat
  type: oci_genai_chat
  #  model: gpt-4
  model: gpt-4
  model_id: cohere.command-r-plus
  model_supports_json: false # recommended if this is available for your model.
  # max_tokens: 4000
  # request_timeout: 180.0
  api_base: http://localhost:11434/v1
  endpoint: https://inference.generativeai.us-chicago-1.oci.oraclecloud.com
  config_profile: DEFAULT
  compartment_id: ${OCI_COMPARTMENT_ID}
  # api_version: 2024-02-15-preview
  # organization: <organization_id>
  # deployment_name: <azure_model_deployment_name>
  # tokens_per_minute: 150_000 # set a leaky bucket throttle
  # requests_per_minute: 10_000 # set a leaky bucket throttle
  # max_retries: 10
  # max_retry_wait: 10.0
  # sleep_on_rate_limit_recommendation: true # whether to sleep when azure suggests wait-times
  concurrent_requests: 100 # <-25 the number of parallel inflight requests that may be made
  # temperature: 0 # temperature for sampling
  # top_p: 1 # top-p sampling
  # n: 1 # Number of completions to generate

parallelization:
  stagger: 0.3
  # num_threads: 50 # the number of threads to use for parallel processing

async_mode: threaded # or asyncio

embeddings:
  ## parallelization: override the global parallelization settings for embeddings
  async_mode: threaded # or asyncio
  llm:
    api_key: ${GRAPHRAG_API_KEY}
    # type: openai_embedding # or azure_openai_embedding
    type: oci_genai_embedding
    # model: xiaobu-embedding-v2
    model: multilingual-e5-large-instruct
    # model: bge-multilingual-gemma2
    model_id: cohere.embed-multilingual-v3.0
    api_base: http://localhost:7965/v1
    endpoint: https://inference.generativeai.us-chicago-1.oci.oraclecloud.com
    config_profile: DEFAULT
    compartment_id: ${OCI_COMPARTMENT_ID}
    # api_version: 2024-02-15-preview
    # organization: <organization_id>
    # deployment_name: <azure_model_deployment_name>
    # tokens_per_minute: 150_000 # set a leaky bucket throttle
    # requests_per_minute: 10_000 # set a leaky bucket throttle
    # max_retries: 10
    # max_retry_wait: 10.0
    # sleep_on_rate_limit_recommendation: true # whether to sleep when azure suggests wait-times
    # concurrent_requests: 25 # <-25 the number of parallel inflight requests that may be made
    # batch_size: 16 # the number of documents to send in a single request
    # batch_max_tokens: 8191 # the maximum number of tokens to send in a single request
    batch_max_tokens: 400 # the maximum number of tokens to send in a single request
    # target: required # or optional
  vector_store:
    type: oracle_ai_search


chunks:
  size: 1200
  overlap: 100
  group_by_columns: [ id ] # by default, we don't allow chunks to cross documents

input:
  type: file # or blob
  file_type: text # or csv
  base_dir: "input"
  file_encoding: utf-8
  file_pattern: ".*\\.txt$"

cache:
  type: file # or blob
  base_dir: "cache"
  # connection_string: <azure_blob_storage_connection_string>
  # container_name: <azure_blob_storage_container_name>

storage:
  type: file # or blob
  #  base_dir: "output/${timestamp}/artifacts"
  base_dir: "output/prod/artifacts"
  # connection_string: <azure_blob_storage_connection_string>
  # container_name: <azure_blob_storage_container_name>

reporting:
  type: file # or console, blob
  #  base_dir: "output/${timestamp}/reports"
  base_dir: "output/prod/reports"
  # connection_string: <azure_blob_storage_connection_string>
  # container_name: <azure_blob_storage_container_name>

entity_extraction:
  ## llm: override the global llm settings for this task
  ## parallelization: override the global parallelization settings for this task
  ## async_mode: override the global async_mode settings for this task
  prompt: "prompts/entity_extraction_zh.txt"
  entity_types: [ organization,person,geo,event ]
  max_gleanings: 1

summarize_descriptions:
  ## llm: override the global llm settings for this task
  ## parallelization: override the global parallelization settings for this task
  ## async_mode: override the global async_mode settings for this task
  prompt: "prompts/summarize_descriptions_zh.txt"
  max_length: 500

claim_extraction:
  ## llm: override the global llm settings for this task
  ## parallelization: override the global parallelization settings for this task
  ## async_mode: override the global async_mode settings for this task
  # enabled: true
  prompt: "prompts/claim_extraction_zh.txt"
  description: "Any claims or facts that could be relevant to information discovery."
  max_gleanings: 1
  enabled: true

community_reports:
  ## llm: override the global llm settings for this task
  ## parallelization: override the global parallelization settings for this task
  ## async_mode: override the global async_mode settings for this task
  prompt: "prompts/community_report_zh.txt"
  max_length: 2000
  max_input_length: 8000

cluster_graph:
  max_cluster_size: 10

embed_graph:
  enabled: true # if true, will generate node2vec embeddings for nodes
  # num_walks: 10
  # walk_length: 40
  # window_size: 2
  # iterations: 3
  # random_seed: 597832

umap:
  enabled: false # if true, will generate UMAP embeddings for nodes

snapshots:
  graphml: false
  raw_entities: false
  top_level_nodes: false

local_search:
# text_unit_prop: 0.5
# community_prop: 0.1
# conversation_history_max_turns: 5
# top_k_mapped_entities: 10
# top_k_relationships: 10
# llm_temperature: 0 # temperature for sampling
# llm_top_p: 1 # top-p sampling
# llm_n: 1 # Number of completions to generate
# max_tokens: 12000

global_search:
# llm_temperature: 0 # temperature for sampling
# llm_top_p: 1 # top-p sampling
# llm_n: 1 # Number of completions to generate
# max_tokens: 12000
# data_max_tokens: 12000
# map_max_tokens: 1000
# reduce_max_tokens: 2000
# concurrency: 32
